<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/css/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/js/**" security="none"/>

    <http realm="Protected API"
          use-expressions="true"
          auto-config="false"
          create-session="stateless"
          entry-point-ref="unauthorizedEntryPoint"
          authentication-manager-ref="authenticationManager">
        <custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <intercept-url pattern="/api/user/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/api/catalog/**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/api/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/authenticate" access="permitAll" />
        <intercept-url pattern="/api/user.json" access="permitAll"/>
        <intercept-url pattern="/api/advert/list.json" access="permitAll"/>
        <logout/>
    </http>

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <beans:constructor-arg value="ThisIsASecretSoChangeMe" />
    </beans:bean>

    <authentication-manager id="authenticationManager">
        <authentication-provider user-service-ref="userService">
            <password-encoder ref="passwordEncoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>

    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select _email as email, _password as password, _is_account_non_locked as enabled from User where _email=?"
                               authorities-by-username-query="select User._email as email, UserAuthority._value as authorities
                                                              from User, UserAuthority
                                                              where User._email=? AND User._id=UserAuthority._user_id"/>


        </authentication-provider>
    </authentication-manager>
</beans:beans>